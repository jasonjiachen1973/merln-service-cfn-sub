AWSTemplateFormatVersion: 2010-09-09
Description: Create a CodePipeline to include CloudFormation Features, CodeBuild and Approval steps.

Parameters:
  CFNTemplateRepoName:
    Type: String
    Description: Name of the repo which contains CFN template.
    Default: merln-nw-cfn-pipe
  ArtifactStoreS3Location:
    Type: String
    Description: Name of the S3 bucket to store CodePipeline artificat.
    Default: iac0189
  Email:
    Description: Email address where CodePipeline sends pipeline notifications
    Type: String 


Resources:
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: "CodeBuildVPCAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudformation:Get*"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                Resource:
                  - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CFNTemplateRepoName}
              - Effect: "Allow"
                Action:
                  - "ec2:Describe*"
                  - "cloudformation:ValidateTemplate"
                  - "elasticloadbalancing:Describe*"
                  - "autoscaling:Describe*"
                  - "iam:Get*"
                  - "iam:List*"
                  - "logs:Describe*"
                  - "logs:Get*"
                  - "tag:Get*"
                Resource:
                  - "*"
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub CodeBuildCFN-${AWS::StackName}
      Description: Build to validate and copy CFN templates
      ServiceRole: !GetAtt [ CodeBuildRole, Arn ]
      Artifacts:
        Type: S3
        Location: !Ref ArtifactStoreS3Location
        Name: !Sub CodeBuildCFN-${AWS::StackName}
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: TEMPLATE_BUCKET
            Value: !Ref ArtifactStoreS3Location
          - Name: TEMPLATE_PREFIX
            Value: codebuild
      Source:
        Location: !Sub https://git-codecommit.ca-central-1.amazonaws.com/v1/repos/${CFNTemplateRepoName}
        Type: CODECOMMIT
      TimeoutInMinutes: 15
      Tags:
        - Key: Name
          Value: !Sub CodeBuildCFN-${AWS::StackName}


  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CodePipelineVPCAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/*
              - Effect: "Allow"
                Action:
                  - "sns:Publish"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                  - "codecommit:UploadArchive"
                Resource: !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CFNTemplateRepoName}
              - Effect: "Allow"
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:CreateStack"
                  - "cloudformation:CreateUploadBucket"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:ValidateTemplate"
                  - "cloudformation:ExecuteChangeSet"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/CloudFormationRole-${AWS::StackName}  


  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub CloudFormationRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CloudFormationVPCAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/*
              - Effect: Allow
                Action: "*"
                Resource: '*'


  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email


  DeployPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub CFN-${AWS::StackName}
      RoleArn: !GetAtt [ CodePipelineRole, Arn ]
      Stages:
        - Name: Source
          Actions:
            - Name: CFNTemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: CFNSourceOutput
              Configuration:
                BranchName: main
                RepositoryName: !Ref CFNTemplateRepoName
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: CFNSourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: CFNCodeBuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Stage
          Actions:              
            - Name: CreateStageCFNStack
              InputArtifacts:
                - Name: CFNCodeBuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                - Name: CreatedStageCFNStack
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Sub Stage-${AWS::StackName}
                TemplateConfiguration: CFNCodeBuildOutput::merln-networkStage-config.json               
                TemplatePath: CFNCodeBuildOutput::merln-network-Stack-pipeline.yml
              RunOrder: 1
        - Name: Production
          Actions:
            - Name: CreateProdChangeSet
              InputArtifacts:
                - Name: CFNCodeBuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                - Name: CreatedProdChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: ProdCBChangeSet
                RoleArn: !GetAtt [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Sub Prod-${AWS::StackName}
                TemplateConfiguration: CFNCodeBuildOutput::merln-networkProd-config.json                
                TemplatePath: CFNCodeBuildOutput::merln-network-Stack-pipeline.yml
              RunOrder: 1
            - Name: ProdApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: Approve deployment in production.
              RunOrder: 2
            - Name: DeployProduction
              InputArtifacts:
                - Name: CreatedProdChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: ProdCBChangeSet
                StackName: !Sub Prod-${AWS::StackName}
              RunOrder: 3

      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreS3Location              

              